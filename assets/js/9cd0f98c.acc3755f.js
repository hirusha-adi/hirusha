"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[7980],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(a),m=i,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||l;return a?n.createElement(h,r(r({ref:t},u),{},{components:a})):n.createElement(h,r({ref:t},u))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},250:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(7462),i=(a(7294),a(3905));const l={title:"File Handling",sidebar_label:"File Handling",slug:"file_handling",sidebar_position:4},r=void 0,o={unversionedId:"study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",id:"study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",title:"File Handling",description:"- make sure to always close the file",source:"@site/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling.md",sourceDirName:"study/cie_al/computer_science/paper_2/my_revision_notes/basics",slug:"/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",draft:!1,editUrl:"https://github.com/hirusha-adi/hirusha/tree/main/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"File Handling",sidebar_label:"File Handling",slug:"file_handling",sidebar_position:4},sidebar:"study",previous:{title:"Pseudocode",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/pseudocode"},next:{title:"Errors",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/errors"}},s={},d=[{value:"Reading",id:"reading",level:2},{value:"Writing",id:"writing",level:2},{value:"Appending",id:"appending",level:2},{value:"Why use Text Files?",id:"why-use-text-files",level:2},{value:"What allows this?",id:"what-allows-this",level:2},{value:"Why use <code>APPEND</code> instead of <code>WRITE</code>?",id:"why-use-append-instead-of-write",level:2},{value:"Storing many data items in one file",id:"storing-many-data-items-in-one-file",level:2},{value:"Method 1",id:"method-1",level:3},{value:"Method 2",id:"method-2",level:3},{value:"Why choose a particular Delimiter?",id:"why-choose-a-particular-delimiter",level:2},{value:"When storing <em>all</em> data in file?",id:"when-storing-all-data-in-file",level:2},{value:"Advantages",id:"advantages",level:3},{value:"Disadvantages",id:"disadvantages",level:3}],u={toc:d},c="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"make sure to always close the file")),(0,i.kt)("h2",{id:"reading"},"Reading"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"use ",(0,i.kt)("inlineCode",{parentName:"li"},"WHILE NOT EOF()")," if you are reading")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"OPENFILE File FOR READ\nWHILE NOT EOF()\n    READFILE File, MyLine\nENDWHILE\nCLOSEFILE File\n")),(0,i.kt)("h2",{id:"writing"},"Writing"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"basically write to line"),(0,i.kt)("li",{parentName:"ul"},"data in file will be erased/replace if any")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"OPENFILE File FOR WRITE\nWRITEFILE File, Data\nCLOSEFILE File\n")),(0,i.kt)("h2",{id:"appending"},"Appending"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add to end of life"),(0,i.kt)("li",{parentName:"ul"},"doesnt delete file contents if any")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"OPENFILE File FOR APPEND\nWRITEFILE File, Data\nCLOSEFILE File\n")),(0,i.kt)("h2",{id:"why-use-text-files"},"Why use Text Files?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"write data from arrays to files before closing the program"),(0,i.kt)("li",{parentName:"ul"},"so, data can be read from these files after the program starts again"),(0,i.kt)("li",{parentName:"ul"},"no need to re-enter data manually")),(0,i.kt)("h2",{id:"what-allows-this"},"What allows this?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"data can be retained after computer has been turned off")),(0,i.kt)("h2",{id:"why-use-append-instead-of-write"},"Why use ",(0,i.kt)("inlineCode",{parentName:"h2"},"APPEND")," instead of ",(0,i.kt)("inlineCode",{parentName:"h2"},"WRITE"),"?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"to ",(0,i.kt)("strong",{parentName:"li"},"not")," replace the existing data")),(0,i.kt)("h2",{id:"storing-many-data-items-in-one-file"},"Storing many data items in one file"),(0,i.kt)("h3",{id:"method-1"},"Method 1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"save one entity as a single line"),(0,i.kt)("li",{parentName:"ul"},"seperated by delimiter"),(0,i.kt)("li",{parentName:"ul"},"that is a unique character among the data"),(0,i.kt)("li",{parentName:"ul"},"to seperately identify and read/parse the valuess"),(0,i.kt)("li",{parentName:"ul"},"concatenate Part 1, then delimiter and then Part 2 and so on...")),(0,i.kt)("h3",{id:"method-2"},"Method 2"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"have data occupy a fixed number of characters"),(0,i.kt)("li",{parentName:"ul"},"a fixed length"),(0,i.kt)("li",{parentName:"ul"},"then extract data from it")),(0,i.kt)("h2",{id:"why-choose-a-particular-delimiter"},"Why choose a particular Delimiter?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"it doesn't already exist in the recorded data")),(0,i.kt)("h2",{id:"when-storing-all-data-in-file"},"When storing ",(0,i.kt)("em",{parentName:"h2"},"all")," data in file?"),(0,i.kt)("h3",{id:"advantages"},"Advantages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"fewer file oeprations required")),(0,i.kt)("h3",{id:"disadvantages"},"Disadvantages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"algorithm to combine, extract individual data will be more complex")))}p.isMDXComponent=!0}}]);