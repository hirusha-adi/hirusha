"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[5132],{68832:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=r(11527),t=r(56213);const i={title:"Exam Style Questions - Low-level programming",sidebar_label:"ESQ",slug:"esq",sidebar_position:2},o=void 0,c={id:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_28/esq",title:"Exam Style Questions - Low-level programming",description:"Tasks",source:"@site/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_28/esq.md",sourceDirName:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_28",slug:"/study/cie_al/computer_science/paper_4/my_study_notes/chapter_28/esq",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_28/esq",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Exam Style Questions - Low-level programming",sidebar_label:"ESQ",slug:"esq",sidebar_position:2},sidebar:"study",previous:{title:"Notes",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_28/notes"},next:{title:"Chapter 28 - Declarative programming",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_29/"}},a={},l=[{value:"Tasks",id:"tasks",level:2},{value:"Tasks 28.01",id:"tasks-2801",level:3},{value:"Tasks 28.02",id:"tasks-2802",level:3},{value:"Tasks 28.03",id:"tasks-2803",level:3},{value:"Tasks 28.04",id:"tasks-2804",level:3},{value:"Tasks 28.05",id:"tasks-2805",level:3},{value:"Tasks 28.06",id:"tasks-2806",level:3},{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"tasks",children:"Tasks"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Tasks"}),(0,s.jsx)(n.h3,{id:"tasks-2801",children:"Tasks 28.01"}),(0,s.jsx)(n.p,{children:"Write assembly code instructions for this sequence of pseudocode statements:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"A \u2190 2\r\nB \u2190 10\r\nC \u2190 A + B\r\nD \u2190 A - B\n"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Answer:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"LDM #2\r\nSTO A\r\n\r\nLDM #10\r\nSTO B\r\n\r\nADD A\r\nSTO C\r\n\r\nLDD A\r\nSUB B\r\nSTO D\n"})}),"\n"]}),"\n"]}),(0,s.jsx)(n.h3,{id:"tasks-2802",children:"Tasks 28.02"}),(0,s.jsx)(n.p,{children:"Write assembly code instructions for this sequence of pseudocode statements:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"IF A <> 0 THEN\r\n    B \u2190 A\r\nELSE\r\n    B \u2190 B - 1\r\nENDIF\n"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Answer:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"        LDD A\r\n        SUB A\r\n        CMP #0\r\n        JPE ELSE    ; if a-a==0, then go to else => equal to not(a-a==0) to go if\r\nTHEN:   LDD A\r\n        STO B\r\nELSE:   LDD B\r\n        SUB #1\r\n        STO B\r\nENDIF:  ...\n"})}),"\n"]}),"\n"]}),(0,s.jsx)(n.h3,{id:"tasks-2803",children:"Tasks 28.03"}),(0,s.jsx)(n.p,{children:"Write assembly code instructions for this sequence of pseudocode statements:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Number \u2190 1\r\nTotal \u2190 0\r\nMax \u2190 5\r\nREPEAT\r\nTotal \u2190 Total + Number\r\nNumber \u2190 Number + 1\r\nUNTIL Number = Max\n"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Answer:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"        LDM #1\r\n        STO Number\r\n        LDM #0\r\n        STO Total\r\n        LDM #5\r\n        STO Max\r\nLOOP:   LDD Total\r\n        ADD Number\r\n        STO Total\r\n        LDD Number\r\n        INC ACC\r\n        STO Number\r\n        CMP Max\r\n        JPN LOOP        ; repeat until the condition becomes true\r\n                        ; repeat while condtion is false\n"})}),"\n"]}),"\n"]}),(0,s.jsx)(n.h3,{id:"tasks-2804",children:"Tasks 28.04"}),(0,s.jsx)(n.p,{children:"Write assembly code instructions for this sequence of pseudocode statements:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Count \u2190 0\r\nREPEAT\r\nCount \u2190 Count + 1\r\nINPUT Character\r\nUNTIL Character = "N"\n'})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Answer:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"        LDM #0\r\n        STO Count\r\nLOOP:   LDD Count       ; if we don't mention it, this won't work from 2nd iteraion onwards.\r\n        INC ACC\r\n        STO Character\r\n        IN\r\n        STO Character\r\n        CMP #78         ; ascii code of 'N'\r\n        JPN LOOP\n"})}),(0,s.jsx)(n.h3,{id:"tasks-2805",children:"Tasks 28.05"}),(0,s.jsx)(n.p,{children:"Write assembly code instructions for this sequence of pseudocode statements:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'REPEAT\r\nCount \u2190 Count + 1\r\nINPUT Character\r\nUNTIL Character = "N"\r\nOUTPUT Count\n'})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Answer:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"        LDM #0\r\n        STO Count\r\nLOOP:   LDD Count\r\n        INC ACC\r\n        STO Character\r\n        IN\r\n        STO Character\r\n        CMP #78         ; ascii code of 'N'\r\n        JPN LOOP\r\n        LDD Count\r\n        OUT\n"})}),(0,s.jsx)(n.h3,{id:"tasks-2806",children:"Tasks 28.06"}),(0,s.jsx)(n.p,{children:"Write instructions to reverse a word entered at the keyboard. This requires access to an area of memory treated as a stack"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Answer:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{})})]}),"\n",(0,s.jsx)(n.h2,{id:"question-1",children:"Question 1"}),"\n",(0,s.jsx)(n.p,{children:"a) Explain the operation of the AND instruction."}),"\n",(0,s.jsx)(n.p,{children:"The AND instruction performs a bitwise AND operation between two operands, setting each bit of the result to 1 only if both corresponding bits of the operands are 1."}),"\n",(0,s.jsx)(n.p,{children:"b) The ASCII code for \u20180\u2019 is the binary value 00110000. The ASCII code for \u20181\u2019 is the binary\r\nvalue 00110001. Write an AND instruction to convert any numeric digit stored in ACC in the form of an ASCII code\r\nto its eight-bit binary integer equivalent."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"LDM 00110000b\r\nLDD 00110000    ; this is now in the ACC\r\nAND 00001111b\n"})}),"\n",(0,s.jsx)(n.p,{children:"c)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"; Input first digit\r\nIN\r\n\r\n; Convert from ASCII to its digit value\r\n; ---\r\n\r\n; Move to upper nibble\r\nLSL #4\r\n\r\n; Store in location Result\r\nSTO Result\r\n\r\n; Input second digit\r\nIN\r\n\r\n; Convert from ASCII to its digit value\r\n; ---\r\n\r\n; Combine the two values\r\nADD Result\r\n\r\n; Store result\r\nSTO Result\r\n\r\n; End of program\r\nEND\r\n\r\n; Labels\r\n;   Mask: \r\n;       --\r\n;   Result:\r\n;       &00\n"})}),"\n",(0,s.jsx)(n.h2,{id:"question-2",children:"Question 2"}),"\n",(0,s.jsx)(n.p,{children:"Write an assembly language program that outputs a sequence of characters stored in successive\r\nlocations, starting at the location labelled: STRING. Output ends when the character in ACC is \u2018!\u2019\r\n(ASCII code 33)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"; Set index register to zero\r\nLDM #0\r\nSTO IX\r\n\r\n; Load ACC with character stored at STRING (modified by index register)\r\n; ---\r\n; ---\r\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},56213:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>o});var s=r(50959);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);