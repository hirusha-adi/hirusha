"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[9472],{47403:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var s=i(11527),l=i(56213);const r={title:"Chapter 1 - Information representation",sidebar_label:"1. Information representation",slug:"chapter_1_information_representation",sidebar_position:1},c=void 0,d={id:"study/cie_al/computer_science/paper_1/my_revision_notes/chapter_1",title:"Chapter 1 - Information representation",description:"Basics",source:"@site/docs/study/cie_al/computer_science/paper_1/my_revision_notes/chapter_1.md",sourceDirName:"study/cie_al/computer_science/paper_1/my_revision_notes",slug:"/study/cie_al/computer_science/paper_1/my_revision_notes/chapter_1_information_representation",permalink:"/docs/study/cie_al/computer_science/paper_1/my_revision_notes/chapter_1_information_representation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Chapter 1 - Information representation",sidebar_label:"1. Information representation",slug:"chapter_1_information_representation",sidebar_position:1},sidebar:"study",previous:{title:"My Revision Notes",permalink:"/docs/study/cie_al/computer_science/paper_1/my_revision_notes/"},next:{title:"2. Communication and networking technologies",permalink:"/docs/study/cie_al/computer_science/paper_1/my_revision_notes/chapter_2_communication_and_networking_technologies"}},t={},a=[{value:"Basics",id:"basics",level:2},{value:"Structure",id:"structure",level:3},{value:"Addition",id:"addition",level:3},{value:"Substraction",id:"substraction",level:3},{value:"Decimal",id:"decimal",level:2},{value:"to Binary",id:"to-binary",level:3},{value:"to Hex",id:"to-hex",level:3},{value:"Method 1 (No Calculator)",id:"method-1-no-calculator",level:4},{value:"Method 2 (Need Calculator)",id:"method-2-need-calculator",level:4},{value:"Binary",id:"binary",level:2},{value:"to Decimal",id:"to-decimal",level:3},{value:"to Hex",id:"to-hex-1",level:3},{value:"Hexadecmal",id:"hexadecmal",level:2},{value:"to Decimal",id:"to-decimal-1",level:3},{value:"to Binary",id:"to-binary-1",level:3},{value:"Number Representation",id:"number-representation",level:2},{value:"Unsigned Integers",id:"unsigned-integers",level:3},{value:"Signed Integers",id:"signed-integers",level:3},{value:"Ones Complement",id:"ones-complement",level:3},{value:"Twos Complement",id:"twos-complement",level:3},{value:"Binary Coded Decimals",id:"binary-coded-decimals",level:2},{value:"Overflow",id:"overflow",level:2},{value:"What is an Overlfow?",id:"what-is-an-overlfow",level:4},{value:"Example",id:"example",level:4},{value:"BCD Overflow Fix",id:"bcd-overflow-fix",level:3},{value:"Character Sets",id:"character-sets",level:2},{value:"How is a word stored?",id:"how-is-a-word-stored",level:4},{value:"ASCII",id:"ascii",level:3},{value:"Extended ASCII",id:"extended-ascii",level:3},{value:"Unicode",id:"unicode",level:3},{value:"Remember these character codes",id:"remember-these-character-codes",level:4},{value:"What is the character code of <code>c</code> given that the character code of <code>a</code> is <code>97</code>?",id:"what-is-the-character-code-of-c-given-that-the-character-code-of-a-is-97",level:4},{value:"Sound",id:"sound",level:2},{value:"Definitions",id:"definitions",level:3},{value:"Sampling",id:"sampling",level:4},{value:"Sampling Resolution",id:"sampling-resolution",level:4},{value:"Sampling Rate",id:"sampling-rate",level:4},{value:"Components",id:"components",level:3},{value:"ADC",id:"adc",level:4},{value:"Band Lmiting Filter",id:"band-lmiting-filter",level:4},{value:"Vector Graphics",id:"vector-graphics",level:2},{value:"How are vectors stored?",id:"how-are-vectors-stored",level:4},{value:"why vector graphics have a lower file size?",id:"why-vector-graphics-have-a-lower-file-size",level:4},{value:"why don&#39;t vector graphics loose quality when resized?",id:"why-dont-vector-graphics-loose-quality-when-resized",level:4},{value:"file formats?",id:"file-formats",level:4},{value:"Definitions",id:"definitions-1",level:3},{value:"Drawing Object",id:"drawing-object",level:4},{value:"Property",id:"property",level:4},{value:"Bitmaps",id:"bitmaps",level:2},{value:"File Formats",id:"file-formats-1",level:4},{value:"Defnitions",id:"defnitions",level:3},{value:"Pixel",id:"pixel",level:4},{value:"Color Depth",id:"color-depth",level:4},{value:"Bit Depth",id:"bit-depth",level:4},{value:"Image Resultion",id:"image-resultion",level:4},{value:"Bitmap Header",id:"bitmap-header",level:3},{value:"Calculating File Size",id:"calculating-file-size",level:3},{value:"Compression",id:"compression",level:2},{value:"Why compress data?",id:"why-compress-data",level:4},{value:"Lossy Compression",id:"lossy-compression",level:3},{value:"Lossless Compression",id:"lossless-compression",level:3},{value:"Run Length Encoding",id:"run-length-encoding",level:4},{value:"Compressing Data",id:"compressing-data",level:3},{value:"Compressing Images",id:"compressing-images",level:4},{value:"Compressing Audio",id:"compressing-audio",level:4},{value:"Compressing Text",id:"compressing-text",level:4},{value:"Why RLE might be bad for compressing text files?",id:"why-rle-might-be-bad-for-compressing-text-files",level:5},{value:"Other",id:"other",level:2},{value:"Multimedia Container Format",id:"multimedia-container-format",level:3},{value:"File Formats",id:"file-formats-2",level:4},{value:"Bitmaps vs Vectors",id:"bitmaps-vs-vectors",level:3},{value:"Bitmaps",id:"bitmaps-1",level:4},{value:"Vectors",id:"vectors",level:4}];function o(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,s.jsx)(n.h3,{id:"structure",children:"Structure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"In a byte, there are 8 bits:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"         0   0   0   0     0   0   0   0\n(most significant bit)\t\t (least significant bit) \n"})}),"\n",(0,s.jsx)(n.h3,{id:"addition",children:"Addition"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"overflow errors are very common here"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168495164176740352/image.png?ex=6551f8ec&is=653f83ec&hm=459efa9b9bbd0e8ecc1c8ad400b3082d53da55f714b7baafc2384fa18ec23846&",alt:"iaa"})}),"\n",(0,s.jsx)(n.h3,{id:"substraction",children:"Substraction"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Basics:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"1 - 0  =  1"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"10 - 1  =  1"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"11 - 1  =  10"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You can\u2019t: ",(0,s.jsx)(n.code,{children:"0 - 1"}),", so, you have to borrow"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168495537612410950/image.png?ex=6551f945&is=653f8445&hm=3bb31abb1c54432eb229b66b9e2934971113e956bf3f7879b766c4687f36584b&",alt:"iaa3"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["this is discussed further under ",(0,s.jsx)(n.a,{href:"#twos-complement",children:"Two's Complement"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"decimal",children:"Decimal"}),"\n",(0,s.jsx)(n.h3,{id:"to-binary",children:"to Binary"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168486746800017502/image.png?ex=6551f115&is=653f7c15&hm=06a8618235cd1998b2c2a04366ff218c8d0511656579222a7a83ac5936591a54&",alt:"img1"})}),"\n",(0,s.jsx)(n.h3,{id:"to-hex",children:"to Hex"}),"\n",(0,s.jsx)(n.h4,{id:"method-1-no-calculator",children:"Method 1 (No Calculator)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"first, convert to Binary"}),"\n",(0,s.jsxs)(n.li,{children:["then, convert to Hexadeximal","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"consider each 4 bits from LSB (as blocks of 4 bits)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"method-2-need-calculator",children:"Method 2 (Need Calculator)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168487441972334642/image.png?ex=6551f1bb&is=653f7cbb&hm=c564ea57d53e5553abf0d020cee6cf1692b6bbc067fe45cba3d39c4715bda0f9&",alt:"img3"})}),"\n",(0,s.jsx)(n.h2,{id:"binary",children:"Binary"}),"\n",(0,s.jsx)(n.h3,{id:"to-decimal",children:"to Decimal"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168487246043828264/image.png?ex=6551f18c&is=653f7c8c&hm=88d7984e5e0559886d89900aa03b5a2edc935fdaaf94682315264b739ce2a4b6&",alt:"img2"})}),"\n",(0,s.jsx)(n.h3,{id:"to-hex-1",children:"to Hex"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168488572899315803/image.png?ex=6551f2c9&is=653f7dc9&hm=0bfdc47d1cf8aaa8a633be0b92b4a841c262ed78394295de55e45c8aaf0e541f&",alt:"img6"})}),"\n",(0,s.jsx)(n.h2,{id:"hexadecmal",children:"Hexadecmal"}),"\n",(0,s.jsx)(n.h3,{id:"to-decimal-1",children:"to Decimal"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168487979614994463/image.png?ex=6551f23b&is=653f7d3b&hm=8a1d04ea8f8e88c983eaaf4b0ab5d30b98adcc6b87cfde34c2b4714b9db0d7b5&",alt:"img4"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168488190110339122/image.png?ex=6551f26d&is=653f7d6d&hm=b1300e46f4bbe013e7828e0ec09e214ef15d46aea304c12343da8186a591b5c9&",alt:"img5"})}),"\n",(0,s.jsx)(n.h3,{id:"to-binary-1",children:"to Binary"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168488731494330428/image.png?ex=6551f2ef&is=653f7def&hm=ec9cb8efe99fa07cf945773907d3aa113e40ba92c1a75da576197ec76b4144d1&",alt:"img7"})}),"\n",(0,s.jsx)(n.h2,{id:"number-representation",children:"Number Representation"}),"\n",(0,s.jsx)(n.h3,{id:"unsigned-integers",children:"Unsigned Integers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"store only positive numbers"}),"\n",(0,s.jsx)(n.li,{children:"uses all bits to store the value"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"signed-integers",children:"Signed Integers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"1 bit is used to store the sign"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"can store negative number"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"if MSB is one it's negative"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"there are two types"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"one's complement"}),"\n",(0,s.jsx)(n.li,{children:"two's complement"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168491617884319804/image.png?ex=6551f59f&is=653f809f&hm=a980b7cad8d786a59aae406fce8d3f62f282f78bcc377c2dc1247f5ef19b279f&",alt:"im7"})}),"\n",(0,s.jsx)(n.h3,{id:"ones-complement",children:"Ones Complement"}),"\n",(0,s.jsx)(n.p,{children:"one from each bit or invert every bit"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168490255754743808/image.png?ex=6551f45a&is=653f7f5a&hm=010b2a17035c42f07e0526a6b07012f32de666b137541149a3ccb24e4c7b019f&",alt:"im1"})}),"\n",(0,s.jsx)(n.h3,{id:"twos-complement",children:"Twos Complement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ones complement + 1"}),"\n",(0,s.jsx)(n.li,{children:"or"}),"\n",(0,s.jsx)(n.li,{children:"start from the first bit (LSB) upto the first '1' (inclusive) and invert everything from that point"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168490442850050098/image.png?ex=6551f487&is=653f7f87&hm=1cddb9d8658f79fb241879e8cb3c13276ccf3118991ae30040e9ce04d1faab44&",alt:"im2"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168490417222856704/image.png?ex=6551f480&is=653f7f80&hm=ada722561814280d3612e71aa0e4e9062848f111fe789bd33c468322ff889ea5&",alt:"im3"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["when substracting negative numbers,","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["convert the absolute value of that negative number to binary,","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["( absolute value of of ",(0,s.jsx)(n.code,{children:"-4"})," is ",(0,s.jsx)(n.code,{children:"4"})," )"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"gets its twos complement"}),"\n",(0,s.jsx)(n.li,{children:"and add it to the number we need to subtract from"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168491077917999236/image.png?ex=6551f51e&is=653f801e&hm=8725a7f48c6021093a89eb48e48a218dbe6dc84c6c8dff723945db71616c35a3&",alt:"im4"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168491091746635867/image.png?ex=6551f521&is=653f8021&hm=7b332c66a013a570959bdbf0efd07006fa43df6322f54b03883723423e18e873&",alt:"im5"})}),"\n",(0,s.jsx)(n.h2,{id:"binary-coded-decimals",children:"Binary Coded Decimals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"often reffered to as BCD"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"valid only if 0 (0000) to 9 (1001)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Only ",(0,s.jsx)(n.strong,{children:"0000-1001"})," are ",(0,s.jsx)(n.strong,{children:"valid"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"eg:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u201c85\u201d can be represented as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["0000",(0,s.jsx)(n.strong,{children:"1000"}),"  0000",(0,s.jsx)(n.strong,{children:"0101"})," \t",(0,s.jsx)(n.em,{children:"(one BCD digit per byte)"})]}),"\n",(0,s.jsxs)(n.li,{children:["1000",(0,s.jsx)(n.strong,{children:"0101"})," \t\t\t        ",(0,s.jsx)(n.em,{children:"(two BCD digits per byte)"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u201c8503\u201d can be represented as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["0000",(0,s.jsx)(n.strong,{children:"1000"})," 0000",(0,s.jsx)(n.strong,{children:"0101"})," 0000",(0,s.jsx)(n.strong,{children:"0000"})," 0000",(0,s.jsx)(n.strong,{children:"0011"}),"   ",(0,s.jsx)(n.em,{children:"(one BCD digit per byte)"})]}),"\n",(0,s.jsxs)(n.li,{children:["1000",(0,s.jsx)(n.strong,{children:"0101"}),"0000",(0,s.jsx)(n.strong,{children:"0011"})," \t\t\t\t\t            ",(0,s.jsx)(n.em,{children:"(two BCD digits per byte)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"overflow",children:"Overflow"}),"\n",(0,s.jsx)(n.h4,{id:"what-is-an-overlfow",children:"What is an Overlfow?"}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168493630462361740/image.png?ex=6551f77f&is=653f827f&hm=19344495742ce33a05e7a91ba9ba3ce8988266e62ac9b3ff06d5c59102204655&",alt:"ia1"})}),"\n",(0,s.jsx)(n.h3,{id:"bcd-overflow-fix",children:"BCD Overflow Fix"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["add ",(0,s.jsx)(n.code,{children:"0110"})," to fix"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168493807545876480/image.png?ex=6551f7a9&is=653f82a9&hm=ae1052078c97a90a86983f5eea465f0814440bd3d4e89af66500a8bd9b17aa03&",alt:"ia1"})}),"\n",(0,s.jsx)(n.h2,{id:"character-sets",children:"Character Sets"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"symbols/list of characters recognised by a computer"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"how-is-a-word-stored",children:"How is a word stored?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"each character gets replaced by their unique code"}),"\n",(0,s.jsx)(n.li,{children:"the codes are stored in the same order as in the word"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ascii",children:"ASCII"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"uses 7 bits per character"}),"\n",(0,s.jsx)(n.li,{children:"has lesser character range"}),"\n",(0,s.jsx)(n.li,{children:"english characters only"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"extended-ascii",children:"Extended ASCII"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"uses 8 bits per character"}),"\n",(0,s.jsx)(n.li,{children:"slightly larger character range that ASCII"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unicode",children:"Unicode"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"uses 4 bytes per character"}),"\n",(0,s.jsx)(n.li,{children:"has a greater character range"}),"\n",(0,s.jsx)(n.li,{children:"standardized"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"EXAMPLE SUPERSET / SUBSET"}),"\n",(0,s.jsx)(n.h4,{id:"remember-these-character-codes",children:"Remember these character codes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"a"})," : 97"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"z"})," : 122"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"A"})," : 65"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Z"})," : 90"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"what-is-the-character-code-of-c-given-that-the-character-code-of-a-is-97",children:["What is the character code of ",(0,s.jsx)(n.code,{children:"c"})," given that the character code of ",(0,s.jsx)(n.code,{children:"a"})," is ",(0,s.jsx)(n.code,{children:"97"}),"?"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"basically, start counting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"a"})," : 97"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"b"})," : 98"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"c"})," : 99"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["character code of ",(0,s.jsx)(n.code,{children:"c"})," is 99"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["you can also add 3 to the character code of ",(0,s.jsx)(n.code,{children:"a"})," which is ",(0,s.jsx)(n.code,{children:"97"})," as ",(0,s.jsx)(n.code,{children:"c"})," is 3 letters to right from ",(0,s.jsx)(n.code,{children:"a"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sound",children:"Sound"}),"\n",(0,s.jsx)(n.h3,{id:"definitions",children:"Definitions"}),"\n",(0,s.jsx)(n.h4,{id:"sampling",children:"Sampling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"measuring the amplitude of the wave at a regualr time interval"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"sampling-resolution",children:"Sampling Resolution"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of bits used to represent each sample"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"sampling-rate",children:"Sampling Rate"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of samples taken per unit time"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,s.jsx)(n.h4,{id:"adc",children:"ADC"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Analogue to Digital Converter"}),"\n",(0,s.jsx)(n.li,{children:"Converts analogue sound wave to a digital form so that the computer can understand and interpret it"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"band-lmiting-filter",children:"Band Lmiting Filter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"removes high frequency parts that humans cannot hear"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"vector-graphics",children:"Vector Graphics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"graphics made of drawing objects in a drawing list"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"how-are-vectors-stored",children:"How are vectors stored?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"series of geometric shapes"}),"\n",(0,s.jsx)(n.li,{children:"has coordinates stored"}),"\n",(0,s.jsx)(n.li,{children:"contains the drawing list"}),"\n",(0,s.jsxs)(n.li,{children:["has commands for all objects + attributes (properties)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"like: color, line thickness, line style, background color, foreground color"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://cdn.discordapp.com/attachments/1163847683207856178/1168493980862910555/image.png?ex=6551f7d2&is=653f82d2&hm=4ab15c629f2f750afcbc23ba406b184a41ef327c73fe6795bd2415f893af8fdd&",alt:"vec1"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Vector Graphic File","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Drawing List","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Command for each object","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Attributes","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Define a property of the object","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"->"})," Basic Geometric Data"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"why-vector-graphics-have-a-lower-file-size",children:"why vector graphics have a lower file size?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"only the instructions to create the image are stored"}),"\n",(0,s.jsx)(n.li,{children:"not individual pictures, like bitmap images"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"why-dont-vector-graphics-loose-quality-when-resized",children:"why don't vector graphics loose quality when resized?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the instructions to create the image are stored"}),"\n",(0,s.jsx)(n.li,{children:"the image is calculated again dynamically to the required size using these given instructions"}),"\n",(0,s.jsx)(n.li,{children:"therefore, no distortions / not pixellating"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"file-formats",children:"file formats?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".svg"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".cdr"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".eps"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"definitions-1",children:"Definitions"}),"\n",(0,s.jsx)(n.h4,{id:"drawing-object",children:"Drawing Object"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"component defined by a geometric formulae and associated properties"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"property",children:"Property"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"defines one aspect of the appearance of drawing objects"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"bitmaps",children:"Bitmaps"}),"\n",(0,s.jsx)(n.h4,{id:"file-formats-1",children:"File Formats"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".bmp"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".png"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".jpg"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".jpeg"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"defnitions",children:"Defnitions"}),"\n",(0,s.jsx)(n.h4,{id:"pixel",children:"Pixel"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"smallest identifiable component of a bitmap image"}),"\n",(0,s.jsx)(n.li,{children:"image is made from a two dimentional pixel array"}),"\n",(0,s.jsx)(n.li,{children:"each pixel in this array has a position and a color"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"color-depth",children:"Color Depth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"total number of colors that can be represented in an image"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"number of bits per pixel"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"8"})," bits = ",(0,s.jsx)(n.code,{children:"256"})," colors"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"and also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"4"})," colors = ",(0,s.jsx)(n.code,{children:"2"})," bits"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"8"})," colors = ",(0,s.jsx)(n.code,{children:"3"})," bits"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"5"})," colors = ",(0,s.jsx)(n.code,{children:"3"})," bits (as ",(0,s.jsx)(n.code,{children:"5>4"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"bit-depth",children:"Bit Depth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of bits used to represent each pixel in an image"}),"\n",(0,s.jsx)(n.li,{children:"number of bits used to represent one pixel"}),"\n",(0,s.jsx)(n.li,{children:"allows colors variations and shades"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"8"})," bits = ",(0,s.jsx)(n.code,{children:"256"})," shades of one color"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"image-resultion",children:"Image Resultion"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of pixels in image"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"length * height"})," in pixels"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"bitmap-header",children:"Bitmap Header"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"stores metadata about the image:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"bit depth"}),"\n",(0,s.jsx)(n.li,{children:"image resolution"}),"\n",(0,s.jsx)(n.li,{children:"dimensions"}),"\n",(0,s.jsx)(n.li,{children:"offset of image data in file"}),"\n",(0,s.jsx)(n.li,{children:"compression type"}),"\n",(0,s.jsx)(n.li,{children:"file type info (specially important for linux)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"calculating-file-size",children:"Calculating File Size"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"(length in px) * (breadth in px) * (color depth) = X bits"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"then, convert from bits to whatever you want"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"the original file size may be larger than what was estimated during this calculation"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"its because the did not include the size of the bitmap header"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"eg:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"calculate a value for the minimum size of a bitmap file. The bitmap is to use a bit depth of 8 and the bitmap is to be printed with 72 dpi (dots per inch) and to have dimensions 5 inches by 3 inches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"bit depth is 8, which means 8 bits for each of the RGB components, so 24 (8*3) bits are needed for one pixel."}),"\n",(0,s.jsx)(n.li,{children:"72 dpi means 72 pixels per inch"}),"\n",(0,s.jsx)(n.li,{children:"number of pixels per row is 5 \xd7 72 = 360 pixels"}),"\n",(0,s.jsx)(n.li,{children:"number of pixels per column is 3 \xd7 72 = 216 pixels"}),"\n",(0,s.jsx)(n.li,{children:"total number of pixels is 360 \xd7 216 = 77 760 pixels"}),"\n",(0,s.jsx)(n.li,{children:"total number of bits is 77 760 \xd7 24 = 1866240 bits"}),"\n",(0,s.jsx)(n.li,{children:"File size is (1866240/8/1024) = 227.8 KiB"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"resolution is 1366 by 768 and color depth is 24"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of bits we need is: 1366 * 768 * 24 = 25178112 bits"}),"\n",(0,s.jsx)(n.li,{children:"= 25178112 \xf7 8 = 3147264 bytes"}),"\n",(0,s.jsx)(n.li,{children:"= 3147264 \xf7 1024 = 3073.5 kibibytes (3073.5 KiB)"}),"\n",(0,s.jsx)(n.li,{children:"= 3073.5 \xf7 1024 = approximately 3 MiB"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compression",children:"Compression"}),"\n",(0,s.jsx)(n.h4,{id:"why-compress-data",children:"Why compress data?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"to save storage space"}),"\n",(0,s.jsx)(n.li,{children:"reduce transmission costs / time"}),"\n",(0,s.jsx)(n.li,{children:"faster load times (important for websites)"}),"\n",(0,s.jsx)(n.li,{children:"meet file size limitations (eg: in an email)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"lossy-compression",children:"Lossy Compression"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"data is lost ar compression"}),"\n",(0,s.jsx)(n.li,{children:"decompressed file won't be same as the original"}),"\n",(0,s.jsx)(n.li,{children:"has a higher compression ratio"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"lossless-compression",children:"Lossless Compression"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"all data is retained"}),"\n",(0,s.jsx)(n.li,{children:"nothing is lost"}),"\n",(0,s.jsx)(n.li,{children:"low compression ratio"}),"\n",(0,s.jsxs)(n.li,{children:["has two methods","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run Length Encoding"}),"\n",(0,s.jsx)(n.li,{children:"Huffman Encoding (click here to learn something beyond the scope of this syllabus)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"run-length-encoding",children:"Run Length Encoding"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"a lossless compression technique"}),"\n",(0,s.jsxs)(n.li,{children:["looks for ",(0,s.jsx)(n.strong,{children:"consecutive"})," blocks of same repeating bits"]}),"\n",(0,s.jsx)(n.li,{children:"and replace them with one block of those bits"}),"\n",(0,s.jsx)(n.li,{children:"along with the number of times its repeated"}),"\n",(0,s.jsxs)(n.li,{children:["eg:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"aaaaa"})," can be replaced with ",(0,s.jsx)(n.code,{children:"5a"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"393939"})," can be replaced with ",(0,s.jsx)(n.code,{children:"339"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["here, the first ",(0,s.jsx)(n.code,{children:"3"})," tells that there are 3 sets of ",(0,s.jsx)(n.code,{children:"39"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"compressing-data",children:"Compressing Data"}),"\n",(0,s.jsx)(n.h4,{id:"compressing-images",children:"Compressing Images"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"use RLE for areas with same color (lossless)"}),"\n",(0,s.jsxs)(n.li,{children:["reduce the resolution (lossy)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"fewer pixels stored"}),"\n",(0,s.jsx)(n.li,{children:"less storage occupied"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["reduce the color depth (lossy)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"less colors per pixel"}),"\n",(0,s.jsx)(n.li,{children:"each pixel has fewer bits to be stored"}),"\n",(0,s.jsx)(n.li,{children:"less storage is occupied"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"compressing-audio",children:"Compressing Audio"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"use RLE for similiar amplitude points (lossless)"}),"\n",(0,s.jsxs)(n.li,{children:["reduce the sampling resolution (lossy)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"less bits used for each sample"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["reduce sampling rate","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"less samples taken per second"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"compressing-text",children:"Compressing Text"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DO NOT"})," use lossy compression (we need to retain the original data)"]}),"\n",(0,s.jsx)(n.li,{children:"if characters are lost"}),"\n",(0,s.jsx)(n.li,{children:"it won't make sense"}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"why-rle-might-be-bad-for-compressing-text-files",children:"Why RLE might be bad for compressing text files?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["with RLE, ",(0,s.jsx)(n.code,{children:"aaaaa"})," is written as ",(0,s.jsx)(n.code,{children:"a5"})]}),"\n",(0,s.jsx)(n.li,{children:"most characters are used only once in sequence"}),"\n",(0,s.jsx)(n.li,{children:"RLE with therefore give a bad compression ratio"}),"\n",(0,s.jsx)(n.li,{children:"or even be larger than the source file"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"other",children:"Other"}),"\n",(0,s.jsx)(n.h3,{id:"multimedia-container-format",children:"Multimedia Container Format"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"type of format that combines sound and image components of the video"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"file-formats-2",children:"File Formats"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".mp4"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".wmv"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".avi"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"bitmaps-vs-vectors",children:"Bitmaps vs Vectors"}),"\n",(0,s.jsx)(n.h4,{id:"bitmaps-1",children:"Bitmaps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"loose quality when charged"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"vectors",children:"Vectors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"smaller file size"}),"\n",(0,s.jsx)(n.li,{children:"easy storage and transmission"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},56213:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>c});var s=i(50959);const l={},r=s.createContext(l);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);