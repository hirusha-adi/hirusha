"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[4313],{83545:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=t(11527),i=t(56213);const s={title:"Others",sidebar_label:"Others",slug:"others",sidebar_position:5},o=void 0,l={id:"study/cie_al/computer_science/paper_2/my_revision_notes/others",title:"Others",description:"What is an algorithm?",source:"@site/docs/study/cie_al/computer_science/paper_2/my_revision_notes/others.md",sourceDirName:"study/cie_al/computer_science/paper_2/my_revision_notes",slug:"/study/cie_al/computer_science/paper_2/my_revision_notes/others",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/others",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Others",sidebar_label:"Others",slug:"others",sidebar_position:5},sidebar:"study",previous:{title:"Models",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/sdlc/models"},next:{title:"Paper 3",permalink:"/docs/study/cie_al/computer_science/paper_3/"}},a={},d=[{value:"What is an algorithm?",id:"what-is-an-algorithm",level:3},{value:"Why Count Controlled Loop?",id:"why-count-controlled-loop",level:3},{value:"basic boolean",id:"basic-boolean",level:3},{value:"what is a rogue value?",id:"what-is-a-rogue-value",level:3},{value:"Detailed Description of algorithm: AddWord() procedure stores the given word in an unused element in the array. return FALSE if its already in the array [Sample Answer]",id:"detailed-description-of-algorithm-addword-procedure-stores-the-given-word-in-an-unused-element-in-the-array-return-false-if-its-already-in-the-array-sample-answer",level:3},{value:"Structured English of Bubble Sort: Sorting Algorithm [Sample Answer]",id:"structured-english-of-bubble-sort-sorting-algorithm-sample-answer",level:3},{value:"Why use Library routines?",id:"why-use-library-routines",level:3}];function h(e){const n={code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"what-is-an-algorithm",children:"What is an algorithm?"}),"\n",(0,r.jsx)(n.p,{children:"steps that describe how to solve a problem"}),"\n",(0,r.jsx)(n.h3,{id:"why-count-controlled-loop",children:"Why Count Controlled Loop?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"number of iterations are known"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-boolean",children:"basic boolean"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"X OR NOT X"})," cancels each other out"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-is-a-rogue-value",children:"what is a rogue value?"}),"\n",(0,r.jsx)(n.p,{children:"a value used to terminate a sequence of values"}),"\n",(0,r.jsx)(n.h3,{id:"detailed-description-of-algorithm-addword-procedure-stores-the-given-word-in-an-unused-element-in-the-array-return-false-if-its-already-in-the-array-sample-answer",children:"Detailed Description of algorithm: AddWord() procedure stores the given word in an unused element in the array. return FALSE if its already in the array [Sample Answer]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"use the index to keep track"}),"\n",(0,r.jsx)(n.li,{children:"loop through the array and check if the value already exists in it"}),"\n",(0,r.jsx)(n.li,{children:"if it does, return false"}),"\n",(0,r.jsx)(n.li,{children:"if it does not, loop through the array for the second time to find an unused element"}),"\n",(0,r.jsx)(n.li,{children:"when you find one, store the value to it and exit the loop"}),"\n",(0,r.jsx)(n.li,{children:"you may use a flag to exit the loop"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"structured-english-of-bubble-sort-sorting-algorithm-sample-answer",children:"Structured English of Bubble Sort: Sorting Algorithm [Sample Answer]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"use an integer to keep track of the index over the iterations in the array"}),"\n",(0,r.jsx)(n.li,{children:"use a loop to iterate through that array"}),"\n",(0,r.jsx)(n.li,{children:"test if current element is greater than the next element"}),"\n",(0,r.jsx)(n.li,{children:"if so, swap the value"}),"\n",(0,r.jsx)(n.li,{children:"use a temporary variable to help swap the values"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"why-use-library-routines",children:"Why use Library routines?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"they are tested a lot"}),"\n",(0,r.jsx)(n.li,{children:"... possibly by a huge community"}),"\n",(0,r.jsxs)(n.li,{children:["perform functions that we dont know how to perform","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"eg: complex math functions, encryption functions"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"readily available"}),"\n",(0,r.jsx)(n.li,{children:"therefore, speeds up development"}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},56213:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var r=t(50959);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);