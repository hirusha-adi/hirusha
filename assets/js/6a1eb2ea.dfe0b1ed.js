"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[4837],{6530:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>_,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var t=s(11527),i=s(56213);const l={title:"Dunder Methods",sidebar_label:"Dunder Methods",slug:"dunder",sidebar_position:3},_=void 0,d={id:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/dunder",title:"Dunder Methods",description:'- Dunder methods, or "double underscore" methods, are special methods in Python classes.',source:"@site/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/dunder.md",sourceDirName:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_27",slug:"/study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/dunder",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/dunder",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Dunder Methods",sidebar_label:"Dunder Methods",slug:"dunder",sidebar_position:3},sidebar:"study",previous:{title:"ESQ",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/esq"},next:{title:"OOP Concepts",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_27/oop"}},r={},o=[{value:"1. <code>__init__</code>",id:"1-__init__",level:2},{value:"2. <code>__str__</code>",id:"2-__str__",level:2},{value:"3. <code>__repr__</code>",id:"3-__repr__",level:2},{value:"4. <code>__len__</code>",id:"4-__len__",level:2},{value:"5. <code>__getitem__</code>",id:"5-__getitem__",level:2},{value:"6. <code>__del__</code>",id:"6-__del__",level:2},{value:"7. <code>__call__</code>",id:"7-__call__",level:2},{value:"8. <code>__iter__</code> and <code>__next__</code>",id:"8-__iter__-and-__next__",level:2},{value:"9. <code>__eq__</code> and <code>__ne__</code>",id:"9-__eq__-and-__ne__",level:2},{value:"10. <code>__add__</code>",id:"10-__add__",level:2},{value:"11. <code>__sub__</code>",id:"11-__sub__",level:2},{value:"13. <code>__contains__</code>",id:"13-__contains__",level:2},{value:"Others",id:"others",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Dunder methods, or "double underscore" methods, are special methods in Python classes.'}),"\n",(0,t.jsxs)(n.li,{children:["These methods are identified by names enclosed within double underscores, such as ",(0,t.jsx)(n.strong,{children:"init"})," and ",(0,t.jsx)(n.strong,{children:"str"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Dunder methods provide hooks to customize fundamental operations for objects, including initialization, string representation, and arithmetic operations."}),"\n",(0,t.jsx)(n.li,{children:"Leveraging dunder methods enhances code expressiveness and flexibility in creating more intuitive and powerful Python classes."}),"\n",(0,t.jsx)(n.li,{children:"Lets discuss some of the main dunder methods for classes in Python."}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"1-__init__",children:["1. ",(0,t.jsx)(n.a,{href:"#constructor-__init__",children:(0,t.jsx)(n.code,{children:"__init__"})})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Already discussed. ",(0,t.jsx)(n.a,{href:"notes#constructor-__init__",children:"Click here"})," to open that note."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"2-__str__",children:["2. ",(0,t.jsx)(n.code,{children:"__str__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"String Representation Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__str__"})," method is called by the ",(0,t.jsx)(n.code,{children:"str()"})," function and ",(0,t.jsx)(n.code,{children:"print()"})," to get a human-readable string representation."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __str__(self):\n        return f"{self.name}, {self.age} years old"\n\n# Using the __str__ method\nprint(str(Person(name="John", age=25)))\n# Output: John, 25 years old\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"3-__repr__",children:["3. ",(0,t.jsx)(n.code,{children:"__repr__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unambiguous Representation Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__repr__"})," method is called by the ",(0,t.jsx)(n.code,{children:"repr()"})," function and is used for a more detailed, unambiguous representation, often for debugging."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __repr__(self):\n        return f"Person(name={self.name}, age={self.age})"\n\n# Using the __repr__ method\nprint(repr(Person(name="John", age=25)))\n# Output: Person(name=John, age=25)\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"4-__len__",children:["4. ",(0,t.jsx)(n.code,{children:"__len__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Length Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__len__"})," method is called by the built-in ",(0,t.jsx)(n.code,{children:"len()"})," function. It should return the length of the object."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Stack:\n    def __init__(self):\n        self.items = []\n\n    def push(self, item):\n        self.items.append(item)\n\n    def __len__(self):\n        return len(self.items)\n\n# Using the __len__ method\nstack = Stack()\nstack.push(1)\nstack.push(2)\nprint(len(stack))\n# Output: 2\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"5-__getitem__",children:["5. ",(0,t.jsx)(n.code,{children:"__getitem__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Item Access Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__getitem__"})," method is called to retrieve the value at a specific index using square bracket notation."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class MyList:\n    def __init__(self, data):\n        self.data = data\n\n    def __getitem__(self, index):\n        return self.data[index]\n\n# Using the __getitem__ method\nmy_list = MyList([1, 2, 3, 4, 5])\nprint(my_list[2])\n# Output: 3\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"6-__del__",children:["6. ",(0,t.jsx)(n.code,{children:"__del__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Destructor Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__del__"})," method is called when an object is about to be destroyed. It can be used for cleanup activities."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class MyClass:\n    def __del__(self):\n        print("Object deleted")\n\n# Object instantiation\nobj = MyClass()\n\n# Object deletion\ndel obj  # Output: Object deleted\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"7-__call__",children:["7. ",(0,t.jsx)(n.code,{children:"__call__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Call Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__call__"})," method allows an object to be called as a function."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class CallableClass:\n    def __call__(self, x):\n        return x * 2\n\n# Object instantiation\nobj = CallableClass()\n\n# Using the __call__ method\nresult = obj(5)\nprint(result)\n# Output: 10\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"8-__iter__-and-__next__",children:["8. ",(0,t.jsx)(n.code,{children:"__iter__"})," and ",(0,t.jsx)(n.code,{children:"__next__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Iterable Protocol"}),"\n",(0,t.jsxs)(n.li,{children:["Implementing ",(0,t.jsx)(n.code,{children:"__iter__"})," and ",(0,t.jsx)(n.code,{children:"__next__"})," allows an object to be an iterable, supporting iteration using ",(0,t.jsx)(n.code,{children:"for"})," loops."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Counter:\n    def __init__(self, limit):\n        self.limit = limit\n        self.current = 0\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if self.current < self.limit:\n            self.current += 1\n            return self.current - 1\n        else:\n            raise StopIteration\n\n# Using the iterable\ncounter = Counter(limit=5)\nfor num in counter:\n    print(num)\n# Output: 0 1 2 3 4\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"9-__eq__-and-__ne__",children:["9. ",(0,t.jsx)(n.code,{children:"__eq__"})," and ",(0,t.jsx)(n.code,{children:"__ne__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Equality Methods"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__eq__"})," and ",(0,t.jsx)(n.code,{children:"__ne__"})," methods allow you to customize the behavior of equality and inequality comparisons."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __eq__(self, other):\n        return self.x == other.x and self.y == other.y\n\n    def __ne__(self, other):\n        return not self.__eq__(other)\n\n# Object instantiation\npoint1 = Point(1, 2)\npoint2 = Point(1, 2)\n\n# Using the equality methods\nprint(point1 == point2)  # Output: True\nprint(point1 != point2)  # Output: False\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"10-__add__",children:["10. ",(0,t.jsx)(n.code,{children:"__add__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Addition Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__add__"})," method allows objects of a class to define the behavior of the ",(0,t.jsx)(n.code,{children:"+"})," operator."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __add__(self, other):\n        return Point(self.x + other.x, self.y + other.y)\n\n# Object instantiation\npoint1 = Point(1, 2)\npoint2 = Point(3, 4)\n\n# Using the __add__ method\nresult = point1 + point2\nprint(result.x, result.y)\n# Output: 4 6\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"11-__sub__",children:["11. ",(0,t.jsx)(n.code,{children:"__sub__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Subtraction Method"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__sub__"})," method defines the behavior of the ",(0,t.jsx)(n.code,{children:"-"})," operator for objects of a class."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __sub__(self, other):\n        return Point(self.x - other.x, self.y - other.y)\n\n# Object instantiation\npoint1 = Point(5, 8)\npoint2 = Point(2, 3)\n\n# Using the __sub__ method\nresult = point1 - point2\nprint(result.x, result.y)\n# Output: 3 5\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"13-__contains__",children:["13. ",(0,t.jsx)(n.code,{children:"__contains__"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Membership Test"}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"__contains__"})," method defines the behavior of the ",(0,t.jsx)(n.code,{children:"in"})," operator for objects of a class."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class ShoppingCart:\n    def __init__(self, items):\n        self.items = items\n\n    def __contains__(self, item):\n        return item in self.items\n\n# Object instantiation\ncart = ShoppingCart(["apple", "banana", "orange"])\n\n# Using the __contains__ method\nprint("banana" in cart)  # Output: True\nprint("grapes" in cart)  # Output: False\n'})}),"\n",(0,t.jsx)(n.h2,{id:"others",children:"Others"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Yes, there are more!"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.python.org/3/reference/datamodel.html#special-method-names",children:"Click here"})," to open the official documentation."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},56213:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>_});var t=s(50959);const i={},l=t.createContext(i);function _(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:_(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);