"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[7980],{17740:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var l=n(11527),s=n(56213);const a={title:"File Handling",sidebar_label:"File Handling",slug:"file_handling",sidebar_position:4},t=void 0,d={id:"study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",title:"File Handling",description:"- make sure to always close the file",source:"@site/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling.md",sourceDirName:"study/cie_al/computer_science/paper_2/my_revision_notes/basics",slug:"/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/file_handling",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"File Handling",sidebar_label:"File Handling",slug:"file_handling",sidebar_position:4},sidebar:"study",previous:{title:"Data Types",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/data_types"},next:{title:"Errors",permalink:"/docs/study/cie_al/computer_science/paper_2/my_revision_notes/basics/errors"}},r={},c=[{value:"Reading",id:"reading",level:2},{value:"Writing",id:"writing",level:2},{value:"Appending",id:"appending",level:2},{value:"Why use Text Files?",id:"why-use-text-files",level:2},{value:"What allows this?",id:"what-allows-this",level:2},{value:"Why use <code>APPEND</code> instead of <code>WRITE</code>?",id:"why-use-append-instead-of-write",level:2},{value:"Storing many data items in one file",id:"storing-many-data-items-in-one-file",level:2},{value:"Method 1",id:"method-1",level:3},{value:"Method 2",id:"method-2",level:3},{value:"Why choose a particular Delimiter?",id:"why-choose-a-particular-delimiter",level:2},{value:"When storing <em>all</em> data in file?",id:"when-storing-all-data-in-file",level:2},{value:"Advantages",id:"advantages",level:3},{value:"Disadvantages",id:"disadvantages",level:3}];function o(e){const i={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"make sure to always close the file"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"reading",children:"Reading"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["use ",(0,l.jsx)(i.code,{children:"WHILE NOT EOF()"})," if you are reading"]}),"\n"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"OPENFILE File FOR READ\nWHILE NOT EOF()\n    READFILE File, MyLine\nENDWHILE\nCLOSEFILE File\n"})}),"\n",(0,l.jsx)(i.h2,{id:"writing",children:"Writing"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"basically write to line"}),"\n",(0,l.jsx)(i.li,{children:"data in file will be erased/replace if any"}),"\n"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"OPENFILE File FOR WRITE\nWRITEFILE File, Data\nCLOSEFILE File\n"})}),"\n",(0,l.jsx)(i.h2,{id:"appending",children:"Appending"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"add to end of life"}),"\n",(0,l.jsx)(i.li,{children:"doesnt delete file contents if any"}),"\n"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"OPENFILE File FOR APPEND\nWRITEFILE File, Data\nCLOSEFILE File\n"})}),"\n",(0,l.jsx)(i.h2,{id:"why-use-text-files",children:"Why use Text Files?"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"write data from arrays to files before closing the program"}),"\n",(0,l.jsx)(i.li,{children:"so, data can be read from these files after the program starts again"}),"\n",(0,l.jsx)(i.li,{children:"no need to re-enter data manually"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"what-allows-this",children:"What allows this?"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"data can be retained after computer has been turned off"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"why-use-append-instead-of-write",children:["Why use ",(0,l.jsx)(i.code,{children:"APPEND"})," instead of ",(0,l.jsx)(i.code,{children:"WRITE"}),"?"]}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:["to ",(0,l.jsx)(i.strong,{children:"not"})," replace the existing data"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"storing-many-data-items-in-one-file",children:"Storing many data items in one file"}),"\n",(0,l.jsx)(i.h3,{id:"method-1",children:"Method 1"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"save one entity as a single line"}),"\n",(0,l.jsx)(i.li,{children:"seperated by delimiter"}),"\n",(0,l.jsx)(i.li,{children:"that is a unique character among the data"}),"\n",(0,l.jsx)(i.li,{children:"to seperately identify and read/parse the valuess"}),"\n",(0,l.jsx)(i.li,{children:"concatenate Part 1, then delimiter and then Part 2 and so on..."}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"method-2",children:"Method 2"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"have data occupy a fixed number of characters"}),"\n",(0,l.jsx)(i.li,{children:"a fixed length"}),"\n",(0,l.jsx)(i.li,{children:"then extract data from it"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"why-choose-a-particular-delimiter",children:"Why choose a particular Delimiter?"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"it doesn't already exist in the recorded data"}),"\n"]}),"\n",(0,l.jsxs)(i.h2,{id:"when-storing-all-data-in-file",children:["When storing ",(0,l.jsx)(i.em,{children:"all"})," data in file?"]}),"\n",(0,l.jsx)(i.h3,{id:"advantages",children:"Advantages"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"fewer file oeprations required"}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"disadvantages",children:"Disadvantages"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"algorithm to combine, extract individual data will be more complex"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},56213:(e,i,n)=>{n.d(i,{Z:()=>d,a:()=>t});var l=n(50959);const s={},a=l.createContext(s);function t(e){const i=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(a.Provider,{value:i},e.children)}}}]);