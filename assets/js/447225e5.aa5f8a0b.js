"use strict";(self.webpackChunkhirusha=self.webpackChunkhirusha||[]).push([[2351],{3956:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=r(5893),t=r(1151);const s={title:"Notes - Programming paradigms",sidebar_label:"Notes",slug:"notes",sidebar_position:1},a=void 0,l={id:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/notes",title:"Notes - Programming paradigms",description:"Tasks",source:"@site/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/notes.md",sourceDirName:"study/cie_al/computer_science/paper_4/my_study_notes/chapter_25",slug:"/study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/notes",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/notes",draft:!1,unlisted:!1,editUrl:"https://github.com/hirusha-adi/hirusha/tree/main/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/notes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Notes - Programming paradigms",sidebar_label:"Notes",slug:"notes",sidebar_position:1},sidebar:"study",previous:{title:"Chapter 25 - Programming paradigms",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_25/"},next:{title:"Chapter 26 - File processing and exception handling",permalink:"/docs/study/cie_al/computer_science/paper_4/my_study_notes/chapter_26/"}},o={},c=[{value:"Tasks",id:"tasks",level:2},{value:"TASK 25.01",id:"task-2501",level:4},{value:"Draw a line between a statement on the left and its matching programming paradigm on the right",id:"draw-a-line-between-a-statement-on-the-left-and-its-matching-programming-paradigm-on-the-right",level:4},{value:"TASK 25.02",id:"task-2502",level:4},{value:"For each of the four programming paradigms in this chapter, give one programming statement example that is characteristic for this paradigm. State the programming language you used for each example.",id:"for-each-of-the-four-programming-paradigms-in-this-chapter-give-one-programming-statement-example-that-is-characteristic-for-this-paradigm-state-the-programming-language-you-used-for-each-example",level:4},{value:"Programming Paradigms",id:"programming-paradigms",level:2},{value:"Low-level",id:"low-level",level:3},{value:"Imperative",id:"imperative",level:3},{value:"Object-oriented",id:"object-oriented",level:3},{value:"Declarative",id:"declarative",level:3}];function d(e){const i={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components},{Details:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"tasks",children:"Tasks"}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Tasks"}),(0,n.jsx)(i.h4,{id:"task-2501",children:"TASK 25.01"}),(0,n.jsx)(i.h4,{id:"draw-a-line-between-a-statement-on-the-left-and-its-matching-programming-paradigm-on-the-right",children:"Draw a line between a statement on the left and its matching programming paradigm on the right"}),(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Statement"}),(0,n.jsx)(i.th,{children:"Programming Paradigm"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Commands available depend on the type of processor"}),(0,n.jsx)(i.td,{children:"Low-level"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Information hiding is used to protect internal properties of an object"}),(0,n.jsx)(i.td,{children:"Object-oriented"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Statements operate on data"}),(0,n.jsx)(i.td,{children:"Imperative"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Answer a question via a search for a solution"}),(0,n.jsx)(i.td,{children:"Declarative"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Data is combined with procedures"}),(0,n.jsx)(i.td,{children:"Object-oriented"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"First do this and then do that"}),(0,n.jsx)(i.td,{children:"Imperative"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"The basic concept is a relation"}),(0,n.jsx)(i.td,{children:"Declarative"})]})]})]}),(0,n.jsx)(i.h4,{id:"task-2502",children:"TASK 25.02"}),(0,n.jsx)(i.h4,{id:"for-each-of-the-four-programming-paradigms-in-this-chapter-give-one-programming-statement-example-that-is-characteristic-for-this-paradigm-state-the-programming-language-you-used-for-each-example",children:"For each of the four programming paradigms in this chapter, give one programming statement example that is characteristic for this paradigm. State the programming language you used for each example."}),(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Low-level Programming:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Example: ",(0,n.jsx)(i.code,{children:"MOV AX, 5"})]}),"\n",(0,n.jsx)(i.li,{children:"Language: Assembly (x86)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Imperative Programming:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Example: ",(0,n.jsx)(i.code,{children:'for (int i = 0; i < 10; i++) { printf("%d\\n", i); }'})]}),"\n",(0,n.jsx)(i.li,{children:"Language: C"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Object-oriented Programming:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Example: ",(0,n.jsx)(i.code,{children:"Car myCar = new Car(); myCar.accelerate(50);"})]}),"\n",(0,n.jsx)(i.li,{children:"Language: Java"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Declarative Programming:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Example: ",(0,n.jsx)(i.code,{children:"SELECT name FROM users WHERE age > 21;"})]}),"\n",(0,n.jsx)(i.li,{children:"Language: SQL"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsx)(i.h2,{id:"programming-paradigms",children:"Programming Paradigms"}),"\n",(0,n.jsx)(i.p,{children:"The four types of programming paradigms are:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Low-level"})," programming paradigm"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Imperative"})," programming paradigm"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Object-oriented"})," programming paradigm"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Declarative"})," programming paradigm"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"low-level",children:"Low-level"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Direct manipulation of memory addresses and registers."}),"\n",(0,n.jsx)(i.li,{children:"Exploitation of processor architecture."}),"\n",(0,n.jsx)(i.li,{children:"Specific to processor families (e.g., x86 for Intel)."}),"\n",(0,n.jsx)(i.li,{children:"Involves Assembly languages."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"imperative",children:"Imperative"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Programs as explicit step sequences."}),"\n",(0,n.jsx)(i.li,{children:"Execution by the processor."}),"\n",(0,n.jsx)(i.li,{children:"Emphasizes how to achieve a result."}),"\n",(0,n.jsx)(i.li,{children:"Examples: Pascal, C, Basic."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"object-oriented",children:"Object-oriented"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Objects interacting with associated methods."}),"\n",(0,n.jsx)(i.li,{children:"Data structures with behavior."}),"\n",(0,n.jsx)(i.li,{children:"Evolution from imperative languages."}),"\n",(0,n.jsx)(i.li,{children:"Examples: Java, Python, Visual Basic (.NET)."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"declarative",children:"Declarative"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Problem-solving through logical specifications."}),"\n",(0,n.jsx)(i.li,{children:"Programmer describes the situation of interest."}),"\n",(0,n.jsx)(i.li,{children:"Query-based, letting the system determine how to achieve the goal."}),"\n",(0,n.jsx)(i.li,{children:"Examples: SQL, Prolog."}),"\n"]}),"\n",(0,n.jsx)(i.admonition,{title:"note",type:"info",children:(0,n.jsx)(i.p,{children:"We will be learning prolog in the later chapters"})})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,i,r)=>{r.d(i,{Z:()=>l,a:()=>a});var n=r(7294);const t={},s=n.createContext(t);function a(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);